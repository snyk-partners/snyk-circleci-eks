version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.8.2
  snyk: snyk/snyk@0.0.10

defaults: &defaults
  docker:
    - image: circleci/node:9.11.2
  working_directory: ~/repo

jobs:
  test_app:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "pull submodules"
          command: |
            git submodule init
            git submodule update --recursive
      - run:
          name: "run test"
          command: |
            cd submodules/goof
            npm install
      - persist_to_workspace:
          root: .
          paths:
            - .
  scan_app:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - snyk/scan:
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-app'
          severity-threshold: high
          token-variable: SNYK_TOKEN
          target-file: ./submodules/goof/package.json
  build_and_scan_image:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - aws-ecr/build-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          dockerfile: Dockerfile
          path: ./submodules/goof/
          repo: ${CIRCLE_PROJECT_REPONAME}
          tag: 'latest,<< pipeline.number >>'
      - snyk/scan:
          docker-image-name: '$AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME/${CIRCLE_PROJECT_REPONAME}:${tag}'
          fail-on-issues: false
          monitor-on-build: true
          project: '${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}-container'
          severity-threshold: high
          target-file: Dockerfile
          token-variable: SNYK_TOKEN
  build_and_push_image:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - setup_remote_docker
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          region: AWS_REGION_ENV_VAR_NAME
          repo: ${CIRCLE_PROJECT_REPONAME}
          create-repo: true
          checkout: true
          dockerfile: Dockerfile
          path: ./submodules/goof/
          tag: 'latest,<< pipeline.number >>'

workflows:
  build_and_deploy:
    jobs:
      - test_app
      - scan_app:
          requires:
            - test_app
      - build_and_scan_image:
          requires:
            - scan_app
      - build_and_push_image:
          requires:
            - build_and_scan_image